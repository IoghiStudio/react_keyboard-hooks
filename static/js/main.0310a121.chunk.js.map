{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","key","setKey","handleKeyEvent","event","useEffect","document","addEventListener","className","ReactDOM","render","getElementById"],"mappings":"wMAEaA,EAAgB,WAC3B,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAEMC,EAAiB,SAACC,GACtBF,EAAOE,EAAMH,KAEK,MAAdG,EAAMH,KACRC,EAAO,UAYX,OARAG,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASJ,GAE5B,WACLG,SAASC,iBAAiB,QAASJ,MAEpC,IAGD,qBAAKK,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGP,EAAG,mCAC4BA,EAD5B,KAEA,+B,MCrBZQ,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.0310a121.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const App: React.FC = () => {\n  const [key, setKey] = useState('');\n\n  const handleKeyEvent = (event: KeyboardEvent) => {\n    setKey(event.key);\n\n    if (event.key === ' ') {\n      setKey('Space');\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keyup', handleKeyEvent);\n\n    return () => {\n      document.addEventListener('keyup', handleKeyEvent);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">\n        {key\n          ? `The last pressed key is [${key}]`\n          : 'Nothing was pressed yet'}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}